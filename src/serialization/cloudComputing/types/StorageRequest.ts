/**
 * This file auto-generated by Fern from our API Definition.
 */

import { ClimatiqApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const StorageRequest: core.schemas.ObjectSchema<StorageRequest.Raw, ClimatiqApi.cloudComputing.StorageRequest> =
  core.schemas
    .object({
      storageType: core.schemas.property(
        "storage_type",
        core.schemas.lazy(() => serializers.cloudComputing.StorageType)
      ),
      data: core.schemas.number(),
      dataUnit: core.schemas.property("data_unit", core.schemas.string().optional()),
      duration: core.schemas.number(),
    })
    .extend(core.schemas.lazyObject(() => serializers.cloudComputing.BaseRequest));

export declare namespace StorageRequest {
  interface Raw extends serializers.cloudComputing.BaseRequest.Raw {
    storage_type: serializers.cloudComputing.StorageType.Raw;
    data: number;
    data_unit?: string | null;
    duration: number;
  }
}
