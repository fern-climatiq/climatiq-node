/**
 * This file auto-generated by Fern from our API Definition.
 */

import { ClimatiqApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const EstimateResponse: core.schemas.ObjectSchema<
  EstimateResponse.Raw,
  ClimatiqApi.estimation.EstimateResponse
> = core.schemas.object({
  co2E: core.schemas.property("co2e", core.schemas.number()),
  co2EUnit: core.schemas.property("co2e_unit", core.schemas.string()),
  co2ECalculationMethod: core.schemas.property("co2e_calculation_method", core.schemas.string()),
  co2ECalculationOrigin: core.schemas.property("co2e_calculation_origin", core.schemas.string()),
  emissionFactor: core.schemas.property(
    "emission_factor",
    core.schemas.lazyObject(() => serializers.estimation.UsedEmissionFactor)
  ),
  constituentGases: core.schemas.property(
    "constituent_gases",
    core.schemas.lazyObject(() => serializers.estimation.ConstituentGases)
  ),
});

export declare namespace EstimateResponse {
  interface Raw {
    co2e: number;
    co2e_unit: string;
    co2e_calculation_method: string;
    co2e_calculation_origin: string;
    emission_factor: serializers.estimation.UsedEmissionFactor.Raw;
    constituent_gases: serializers.estimation.ConstituentGases.Raw;
  }
}
