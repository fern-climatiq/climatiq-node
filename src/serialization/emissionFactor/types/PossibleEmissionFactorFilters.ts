/**
 * This file auto-generated by Fern from our API Definition.
 */

import { ClimatiqApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const PossibleEmissionFactorFilters: core.schemas.ObjectSchema<
  PossibleEmissionFactorFilters.Raw,
  ClimatiqApi.emissionFactor.PossibleEmissionFactorFilters
> = core.schemas.object({
  year: core.schemas.list(core.schemas.string()),
  source: core.schemas.list(core.schemas.string()),
  region: core.schemas.list(core.schemas.lazyObject(() => serializers.emissionFactor.Region)),
  category: core.schemas.list(core.schemas.string()),
  sector: core.schemas.list(core.schemas.string()),
  unitType: core.schemas.property("unit_type", core.schemas.list(core.schemas.string())),
});

export declare namespace PossibleEmissionFactorFilters {
  interface Raw {
    year: string[];
    source: string[];
    region: serializers.emissionFactor.Region.Raw[];
    category: string[];
    sector: string[];
    unit_type: string[];
  }
}
