/**
 * This file auto-generated by Fern from our API Definition.
 */

import { ClimatiqApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const SearchEmissionFactorsResponse: core.schemas.ObjectSchema<
  SearchEmissionFactorsResponse.Raw,
  ClimatiqApi.emissionFactor.SearchEmissionFactorsResponse
> = core.schemas.object({
  results: core.schemas.list(core.schemas.lazyObject(() => serializers.emissionFactor.EmissionFactor)),
  currentPage: core.schemas.property("current_page", core.schemas.number()),
  lastPage: core.schemas.property("last_page", core.schemas.number()),
  totalResults: core.schemas.property("total_results", core.schemas.number()),
  possibleFilters: core.schemas.property(
    "possible_filters",
    core.schemas.lazyObject(() => serializers.emissionFactor.PossibleEmissionFactorFilters)
  ),
});

export declare namespace SearchEmissionFactorsResponse {
  interface Raw {
    results: serializers.emissionFactor.EmissionFactor.Raw[];
    current_page: number;
    last_page: number;
    total_results: number;
    possible_filters: serializers.emissionFactor.PossibleEmissionFactorFilters.Raw;
  }
}
