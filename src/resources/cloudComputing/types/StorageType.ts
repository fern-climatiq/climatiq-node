/**
 * This file auto-generated by Fern from our API Definition.
 */

/**
 * Which type of hard drive the data is stored on. The cloud provider does not always specify this for managed services, so you might have to make an informed guess.
 */
export interface StorageType<RawValue extends StorageType.RawValue = StorageType.RawValue> {
  value: RawValue;
  visit: <Result>(visitor: StorageType._Visitor<Result>) => Result;
}

const _Ssd: StorageType<"ssd"> = {
  value: "ssd",
  visit: (visitor) => visitor.ssd(),
};
const _Hdd: StorageType<"hdd"> = {
  value: "hdd",
  visit: (visitor) => visitor.hdd(),
};
export const StorageType = {
  /**
   * solid state drive
   */
  Ssd: _Ssd,
  /**
   * hard disk drive
   */
  Hdd: _Hdd,
  _parse: (value: string): StorageType => {
    switch (value) {
      case "ssd": {
        return _Ssd;
      }
      case "hdd": {
        return _Hdd;
      }
      default: {
        return {
          value: value as StorageType.RawValue,
          visit: (visitor) => visitor._other(value),
        };
      }
    }
  },
} as const;

export declare namespace StorageType {
  type RawValue = "ssd" | "hdd";

  interface _Visitor<Result> {
    ssd: () => Result;
    hdd: () => Result;
    _other: (value: string) => Result;
  }
}
