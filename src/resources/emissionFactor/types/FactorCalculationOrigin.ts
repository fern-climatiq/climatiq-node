/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface FactorCalculationOrigin<
  RawValue extends FactorCalculationOrigin.RawValue = FactorCalculationOrigin.RawValue
> {
  value: RawValue;
  visit: <Result>(visitor: FactorCalculationOrigin._Visitor<Result>) => Result;
}

const _Climatiq: FactorCalculationOrigin<"climatiq"> = {
  value: "climatiq",
  visit: (visitor) => visitor.climatiq(),
};
const _Source: FactorCalculationOrigin<"source"> = {
  value: "source",
  visit: (visitor) => visitor.source(),
};
export const FactorCalculationOrigin = {
  Climatiq: _Climatiq,
  Source: _Source,
  _parse: (value: string): FactorCalculationOrigin => {
    switch (value) {
      case "climatiq": {
        return _Climatiq;
      }
      case "source": {
        return _Source;
      }
      default: {
        return {
          value: value as FactorCalculationOrigin.RawValue,
          visit: (visitor) => visitor._other(value),
        };
      }
    }
  },
} as const;

export declare namespace FactorCalculationOrigin {
  type RawValue = "climatiq" | "source";

  interface _Visitor<Result> {
    climatiq: () => Result;
    source: () => Result;
    _other: (value: string) => Result;
  }
}
