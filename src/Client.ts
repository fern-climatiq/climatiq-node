/**
 * This file auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Client as ClassificationsClient } from "./resources/classifications/client/Client";
import { Client as CloudComputingClient } from "./resources/cloudComputing/client/Client";
import { Client as CustomActivitiesClient } from "./resources/customActivities/client/Client";
import { Client as EmissionFactorClient } from "./resources/emissionFactor/client/Client";
import { Client as EstimationClient } from "./resources/estimation/client/Client";
import { Client as FlightsClient } from "./resources/flights/client/Client";

export declare namespace ClimatiqApiClient {
  interface Options {
    environment?: environments.Environment | string;
    auth?: {
      token?: core.Supplier<core.BearerToken>;
    };
  }
}

export class ClimatiqApiClient {
  constructor(private readonly options: ClimatiqApiClient.Options) {}

  #classifications: ClassificationsClient | undefined;

  public get classifications(): ClassificationsClient {
    return (this.#classifications ??= new ClassificationsClient(this.options));
  }

  #cloudComputing: CloudComputingClient | undefined;

  public get cloudComputing(): CloudComputingClient {
    return (this.#cloudComputing ??= new CloudComputingClient(this.options));
  }

  #customActivities: CustomActivitiesClient | undefined;

  public get customActivities(): CustomActivitiesClient {
    return (this.#customActivities ??= new CustomActivitiesClient(this.options));
  }

  #emissionFactor: EmissionFactorClient | undefined;

  public get emissionFactor(): EmissionFactorClient {
    return (this.#emissionFactor ??= new EmissionFactorClient(this.options));
  }

  #estimation: EstimationClient | undefined;

  public get estimation(): EstimationClient {
    return (this.#estimation ??= new EstimationClient(this.options));
  }

  #flights: FlightsClient | undefined;

  public get flights(): FlightsClient {
    return (this.#flights ??= new FlightsClient(this.options));
  }
}
